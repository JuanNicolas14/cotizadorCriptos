{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eba980dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MensajeError = styled.p`\r\n  background-color: #b7322c;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  font-size: 30px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-family: \"Bebas Neue\", cursive;\r\n`;\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <MensajeError>{mensaje}</MensajeError>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n  // State de nuestro custom hook\r\n  const [state, actualizarState] = useState(stateInicial);\r\n\r\n  const Seleccionar = () => (\r\n    <Fragment>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.codigo} value={opcion.codigo}>\r\n            {opcion.nombre}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </Fragment>\r\n  );\r\n  // Retornar state, interfaz y funcion que modifica el state\r\n  return [state, Seleccionar, actualizarState];\r\n};\r\n\r\nexport default useMoneda;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n  // State de nuestro custom hook\r\n  const [state, actualizarState] = useState(stateInicial);\r\n\r\n  const SelectCripto = () => (\r\n    <Fragment>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\r\n            {opcion.CoinInfo.FullName}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </Fragment>\r\n  );\r\n  // Retornar state, interfaz y funcion que modifica el state\r\n  return [state, SelectCripto, actualizarState];\r\n};\r\n\r\nexport default useCriptomoneda;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Error from \"./Error\";\r\nimport useMoneda from \"../hooks/useMoneda\";\r\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\r\nimport axios from \"axios\";\r\n\r\nconst Boton = styled.input`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #66a2fe;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #326ac0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Formulario = ({ guardarMoneda, guardarCriptomoneda }) => {\r\n  // state del listado de criptomonedas\r\n  const [listacripto, guardarCriptomonedas] = useState([]);\r\n  const [error, guardarError] = useState(false);\r\n\r\n  const MONEDAS = [\r\n    { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\" },\r\n    { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\r\n    { codigo: \"EUR\", nombre: \"Euro\" },\r\n    { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\r\n  ];\r\n\r\n  //Utilizar useMoneda\r\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\", MONEDAS);\r\n\r\n  // Utilizar useCriptomoneda\r\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\r\n    \"Elige tu Criptomoneda\",\r\n    \"\",\r\n    listacripto\r\n  );\r\n\r\n  //Ejecutar llamado a la API\r\n  useEffect(() => {\r\n    const consultarAPI = async () => {\r\n      const url =\r\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n\r\n      const resultado = await axios.get(url);\r\n      guardarCriptomonedas(resultado.data.Data);\r\n    };\r\n    consultarAPI();\r\n  }, []);\r\n\r\n  //Cuando el usuario hace submit\r\n  const cotizarMoneda = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Validar si ambos campos estan llenos\r\n    if (moneda === \"\" || criptomoneda === \"\") {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n\r\n    //pasar los datos al componente principal\r\n    guardarError(false);\r\n    guardarMoneda(moneda);\r\n    guardarCriptomoneda(criptomoneda);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={cotizarMoneda}>\r\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\r\n      <SelectMonedas />\r\n      <SelectCripto />\r\n      <Boton type=\"submit\" value=\"Calcular\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ResultadoDiv = styled.div`\r\n  color: #fff;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n  font-size: 18px;\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n  font-size: 30px;\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Cotizacion = ({ resultado }) => {\r\n  if (Object.keys(resultado).length === 0) return null;\r\n\r\n  return (\r\n    <ResultadoDiv>\r\n      <Precio>\r\n        El precio es: <span>{resultado.PRICE}</span>\r\n      </Precio>\r\n      <Info>\r\n        Precio mas alto del dia: <span>{resultado.HIGHDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Precio mas bajo del dia: <span>{resultado.LOWDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Variacion ultimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>\r\n      </Info>\r\n      <Info>\r\n        Ultima actualizacion: <span>{resultado.LASTUPDATE}</span>\r\n      </Info>\r\n    </ResultadoDiv>\r\n  );\r\n};\r\n\r\nexport default Cotizacion;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-chase\">\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n      <div className=\"sk-chase-dot\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport imagen from \"./cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner\";\nimport axios from \"axios\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [criptomoneda, guardarCriptomoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      //Evitamos la ejecucion la primera vez\n      if (moneda === \"\") return;\n\n      //Consultar la api para obtener la cotizacion\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n      // Mostrar el spinner\n      guardarCargando(true);\n\n      //Ocultar el spinner y mostrar el resultado\n      setTimeout(() => {\n        guardarCargando(false);\n        //Guardar cotizacion\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]);\n\n  //Mostrar spinner o resultado\n  const componente = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"imagen cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al Instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}